// Place your key bindings in this file to override the defaults
[
    {
        "key": "f3",
        "command": "-list.find",
        "when": "listFocus && listSupportsFind"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "f3",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "f10",
        "command": "-extension.node-debug.startWithStopOnEntry",
        "when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
    },
    {
        "key": "f10",
        "command": "-workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "shift+f10",
        "command": "-editor.action.showContextMenu",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+u",
        "command": "-workbench.action.output.toggleOutput",
        "when": "workbench.panel.output.active"
    },
{
    "key": "ctrl+f9",
    "command": "-workbench.action.chat.nextFileTree",
    "when": "chatIsEnabled && inChat"
},
{
    "key": "ctrl+shift+f9",
    "command": "-workbench.action.chat.previousFileTree",
    "when": "chatIsEnabled && inChat"
},
{
    "key": "shift+f9",
    "command": "-editor.debug.action.toggleInlineBreakpoint",
    "when": "editorTextFocus"
},
{
    "key": "f9",
    "command": "-editor.debug.action.toggleBreakpoint",
    "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
},
{
    "key": "shift+f9",
    "command": "-settings.action.showContextMenu",
    "when": "inSettingsEditor"
},
{
    "key": "alt+f9",
    "command": "-editor.action.nextCommentThreadAction"
},
{
    "key": "shift+alt+f9",
    "command": "-editor.action.previousCommentThreadAction"
},
{
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
},
{
    "key": "f8",
    "command": "-editor.action.marker.nextInFiles",
    "when": "editorFocus"
},
{
    "key": "shift+alt+f8",
    "command": "-editor.action.marker.prev",
    "when": "editorFocus"
},
{
    "key": "shift+f8",
    "command": "-editor.action.marker.prevInFiles",
    "when": "editorFocus"
},
{
    "key": "alt+f8",
    "command": "-testing.goToNextMessage",
    "when": "editorFocus && testing.isPeekVisible"
},
{
    "key": "shift+alt+f8",
    "command": "-testing.goToPreviousMessage",
    "when": "editorFocus && testing.isPeekVisible"
},
{
    "key": "f7",
    "command": "-editor.action.accessibleDiffViewer.next",
    "when": "isInDiffEditor"
},
{
    "key": "shift+f7",
    "command": "-editor.action.accessibleDiffViewer.prev",
    "when": "isInDiffEditor"
},
{
    "key": "f7",
    "command": "-cmake.build",
    "when": "cmake:enableFullFeatureSet && !cmake:hideBuildCommand"
},
{
    "key": "shift+f7",
    "command": "-cmake.buildTarget"
},
{
    "key": "f7",
    "command": "-cmake.buildCurrentTarget"
},
{
    "key": "shift+f7",
    "command": "-cmake.buildWithTarget",
    "when": "cmake:enableFullFeatureSet && !cmake:hideBuildCommand"
},
{
    "key": "ctrl+k ctrl+7",
    "command": "-editor.foldLevel7",
    "when": "editorTextFocus && foldingEnabled"
},
{
    "key": "f7",
    "command": "-editor.action.wordHighlight.next",
    "when": "editorTextFocus && hasWordHighlights"
},
{
    "key": "shift+f7",
    "command": "-editor.action.wordHighlight.prev",
    "when": "editorTextFocus && hasWordHighlights"
},
{
    "key": "f7",
    "command": "-inlineChat.moveToNextHunk",
    "when": "inlineChatHasProvider && inlineChatVisible"
},
{
    "key": "shift+f7",
    "command": "-inlineChat.moveToPreviousHunk",
    "when": "inlineChatHasProvider && inlineChatVisible"
},
{
    "key": "f6",
    "command": "-workbench.action.debug.pause",
    "when": "debugState == 'running'"
},
{
    "key": "alt+f6",
    "command": "-editor.action.accessibleViewDisableHint",
    "when": "accessibilityHelpIsShown && accessibleViewVerbosityEnabled || accessibleViewIsShown && accessibleViewVerbosityEnabled"
},
{
    "key": "ctrl+k ctrl+6",
    "command": "-editor.foldLevel6",
    "when": "editorTextFocus && foldingEnabled"
},
{
    "key": "f6",
    "command": "-workbench.action.focusNextPart"
},
{
    "key": "shift+f6",
    "command": "-workbench.action.focusPreviousPart"
},
{
    "key": "ctrl+6",
    "command": "-extension.vim_ctrl+6",
    "when": "editorTextFocus && vim.active && vim.use<C-6> && !inDebugRepl"
},
{
    "key": "shift+f5",
    "command": "-cmake.debugTarget",
    "when": "cmake:enableFullFeatureSet && inCMakeProject && !cmake:hideDebugCommand && !inDebugMode"
},
{
    "key": "ctrl+f5",
    "command": "-cmake.launchTarget",
    "when": "cmake:enableFullFeatureSet && !cmake:hideDebugCommand && !inDebugMode"
},
{
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
},
{
    "key": "shift+f5",
    "command": "-workbench.action.debug.disconnect",
    "when": "focusedSessionIsAttach && inDebugMode"
},
{
    "key": "ctrl+shift+f5",
    "command": "-workbench.action.debug.restart",
    "when": "inDebugMode"
},
{
    "key": "f5",
    "command": "-workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
},
{
    "key": "ctrl+f5",
    "command": "-workbench.action.debug.run",
    "when": "debuggersAvailable && debugState != 'initializing'"
},
{
    "key": "shift+f5",
    "command": "-workbench.action.debug.stop",
    "when": "inDebugMode && !focusedSessionIsAttach"
},
{
    "key": "ctrl+k ctrl+5",
    "command": "-editor.foldLevel5",
    "when": "editorTextFocus && foldingEnabled"
},
{
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
},
{
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive"
},
{
    "key": "shift+alt+f5",
    "command": "-workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
},
{
    "key": "shift+alt+f5",
    "command": "-workbench.action.editor.previousChange",
    "when": "editorTextFocus && !textCompareEditorActive"
},
{
    "key": "ctrl+f5",
    "command": "-debug.openView",
    "when": "!debuggersAvailable"
},
{
    "key": "f5",
    "command": "-debug.openView",
    "when": "!debuggersAvailable"
},
{
    "key": "alt+f4",
    "command": "-workbench.action.closeWindow"
},
{
    "key": "ctrl+k ctrl+4",
    "command": "-editor.foldLevel4",
    "when": "editorTextFocus && foldingEnabled"
},
{
    "key": "f4",
    "command": "-references-view.next",
    "when": "reference-list.hasResult && references-view.canNavigate"
},
{
    "key": "shift+f4",
    "command": "-references-view.prev",
    "when": "reference-list.hasResult && references-view.canNavigate"
},
{
    "key": "f4",
    "command": "-search.action.focusNextSearchResult",
    "when": "hasSearchResult || inSearchEditor"
},
{
    "key": "shift+f4",
    "command": "-search.action.focusPreviousSearchResult",
    "when": "hasSearchResult || inSearchEditor"
},
{
    "key": "ctrl+f4",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
},
{
    "key": "ctrl+f4",
    "command": "-workbench.action.closeActiveEditor"
},
{
    "key": "f4",
    "command": "-goToNextReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
},
{
    "key": "shift+f4",
    "command": "-goToPreviousReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
},
{
    "key": "ctrl+f4",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
},
{
    "key": "ctrl+f3",
    "command": "-editor.action.nextSelectionMatchFindAction",
    "when": "editorFocus"
},
{
    "key": "shift+f3",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
},
{
    "key": "ctrl+shift+f3",
    "command": "-editor.action.previousSelectionMatchFindAction",
    "when": "editorFocus"
},
{
    "key": "ctrl+k ctrl+3",
    "command": "-editor.foldLevel3",
    "when": "editorTextFocus && foldingEnabled"
},
{
    "key": "alt+f3",
    "command": "-editor.action.dirtydiff.next",
    "when": "editorTextFocus && !textCompareEditorActive"
},
{
    "key": "shift+alt+f3",
    "command": "-editor.action.dirtydiff.previous",
    "when": "editorTextFocus && !textCompareEditorActive"
},
{
    "key": "shift+f3",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
},
{
    "key": "alt+f3",
    "command": "-notebook.diff.action.next",
    "when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'"
},
{
    "key": "shift+alt+f3",
    "command": "-notebook.diff.action.previous",
    "when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'"
},
{
    "key": "ctrl+f2",
    "command": "-editor.action.changeAll",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "ctrl+k ctrl+2",
    "command": "-editor.foldLevel2",
    "when": "editorTextFocus && foldingEnabled"
},
{
    "key": "alt+f2",
    "command": "-editor.action.accessibleView"
},
{
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
},
{
    "key": "f2",
    "command": "-solutionExplorer.renameFile",
    "when": "focusedView in 'solutionexplorer.viewTypes' && solutionExplorer.selectionContext in 'solutionExplorer.cmdAllowedContexts.renameFile'"
},
{
    "key": "f2",
    "command": "-solutionExplorer.renameFolder",
    "when": "focusedView in 'solutionexplorer.viewTypes' && solutionExplorer.selectionContext in 'solutionExplorer.cmdAllowedContexts.renameFolder'"
},
{
    "key": "f2",
    "command": "-solutionExplorer.renameSolutionItem",
    "when": "focusedView in 'solutionexplorer.viewTypes' && solutionExplorer.selectionContext in 'solutionExplorer.cmdAllowedContexts.renameSolutionItem'"
},
{
    "key": "ctrl+shift+f2",
    "command": "-editor.action.linkedEditing",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
},
{
    "key": "f2",
    "command": "-debug.renameWatchExpression",
    "when": "watchExpressionsFocused"
},
{
    "key": "f2",
    "command": "-debug.setVariable",
    "when": "variablesFocused"
},
{
    "key": "ctrl+shift+2",
    "command": "-extension.vim_ctrl+shift+2",
    "when": "editorTextFocus && vim.active && vim.use<C-shift+2>"
},
{
    "key": "f2",
    "command": "-remote.tunnel.label",
    "when": "tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
},
{
    "key": "f2",
    "command": "-workbench.action.terminal.renameActiveTab",
    "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
},
{
    "key": "alt+f2",
    "command": "-workbench.action.terminal.focusAccessibleBuffer",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
},
{
    "key": "f2",
    "command": "-renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
},
{
    "key": "ctrl+k f2",
    "command": "-togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
},
{
    "key": "f11",
    "command": "-extension.node-debug.startWithStopOnEntry",
    "when": "!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node'"
},
{
    "key": "f11",
    "command": "-workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
},
{
    "key": "ctrl+f11",
    "command": "-workbench.action.debug.stepIntoTarget",
    "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
},
{
    "key": "shift+f11",
    "command": "-workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
},
{
    "key": "ctrl+k ctrl+1",
    "command": "-editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
},
{
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus"
},
{
    "key": "ctrl+f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && isWeb"
},
{
    "key": "ctrl+f12",
    "command": "-editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus"
},
{
    "key": "shift+f12",
    "command": "-editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
},
{
    "key": "alt+f1",
    "command": "-editor.action.accessibilityHelp",
    "when": "!accessibilityHelpIsShown"
},
{
    "key": "ctrl+k f12",
    "command": "-editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
},
{
    "key": "ctrl+k ctrl+f12",
    "command": "-editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
},
{
    "key": "alt+f12",
    "command": "-editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
},
{
    "key": "ctrl+shift+f12",
    "command": "-editor.action.peekImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
},
{
    "key": "shift+alt+f12",
    "command": "-references-view.findReferences",
    "when": "editorHasReferenceProvider"
},
{
    "key": "f1",
    "command": "-workbench.action.showCommands"
},
{
    "key": "shift+alt+f1",
    "command": "-editor.action.toggleScreenReaderAccessibilityMode"
},
{
    "key": "f11",
    "command": "-workbench.action.toggleFullScreen",
    "when": "!isIOS"
},
{
    "key": "f12",
    "command": "-editor.gotoNextSymbolFromResult",
    "when": "hasSymbols"
},
{
    "key": "f12",
    "command": "-goToNextReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
},
{
    "key": "shift+f12",
    "command": "-goToPreviousReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
},
{
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenView"
},
{
    "key": "ctrl+shift+q",
    "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
},
{
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
},
{
    "key": "ctrl+; ctrl+x",
    "command": "-testing.cancelRun"
},
{
    "key": "ctrl+x",
    "command": "-filesExplorer.cut",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
},
{
    "key": "ctrl+shift+x",
    "command": "-workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
},
{
    "key": "ctrl+k ctrl+x",
    "command": "-editor.action.trimTrailingWhitespace",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "ctrl+x",
    "command": "-editor.action.clipboardCutAction"
},
{
        "key": "ctrl+q",
        "command": "extension.vim_winCtrlQ",
        "when": "editorTextFocus && vim.active && vim.use<C-q> && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+shift+q",
        "command": "extension.vim_winCtrlQ",
        "when": "editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"
    },
    {
        "key": "ctrl+q",
        "command": "-extension.vim_winCtrlQ",
        "when": "editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"
    },
    {
        "key": "ctrl+shift+u",
        "command": "insert-unicode.fromHexCode"
    },
]
