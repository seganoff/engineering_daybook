alias 146connect='ssh -X -i ~/id_fire -p 2222 u262d@192.168.178.146'; ll='ls -hal'
scp -i ~/id_fire -P 2222 ./some.zip  u262d@192.168.178.146:/<destPATH>/
netsh interface portproxy add v4tov4 listenaddress=0.0.0.0 listenport=2222 connectport=2222 connectaddress={wsl<ipconfig /all}
netsh interface portproxy show v4tov4
#seems optional cuz after pinche win update portproxy was gone & assumably fw rule, only add portproxy enabled access again
#netsh advfirewall firewall add rule name="" dir=in action=allow protocol=TCP localport=2222
#shell:startup c/users/X/appdata/roaming/...<idiotic win path>.../Startup/wsl_on_boot.bat (append 'wsl')
# ~/.ssh/authorized_keys; /etc/ssh/sshd_config

prevent_doxygen define NOT in PREDEFINED (+)= ||(@include = Doxyfile_Predefined)
/// @cond PREVENT_DOXYGEN
FANCY_FILE_SYSTEM_EXTENSION(FANCY_MOD_ID)
/// @endcond
#just show DoxyConfigVars|  doxygen.exe Doxyfile
$ sed '/^#/d' Doxyfile | sed '/^[\r\n]/d'


#------------batch + ps1 related-------------
file.bat
@echo off
REM some comment
start powershell -noexit -command ".\<prog>.exe"
start "windowName" call prog.exe someArg

# lin filter_exclude_ary=("" newlineSeparated "") filter_include=$(IFS=: ; echo "${filter_include_ary[*]}") filter="${filter_include}-${filter_exclude}"
#ps1
$inclAry=@( "val1","val2")
$incl = [system.String]::Join(":", $inclAry)
$final_filter = "$incl-$excl"
<#$final_filter = "$tempinclude-$excl"#>
--gtest_filter=$final_filter #--gtest_output=xml:res.xml
#in case mingw not in PATH # ` escape char for multiline command
pathToYour\gdb.exe --args `
prog.exe.debug args --gtest_filter=$filter

#Copy-Item -Path "xmcrt.pdf" -Destination "nonempty\extradir\xmcrt.pdf" -Recurse
#New-Item -ItemType Dir -Path "nonempty\extradir"
#Copy-Item -Path "xmcrt.pdf" -Destination "nonempty\extradir\xmcrt.pdf" -Recurse
#Copy-Item -Path "xmcrt.pdf" -Destination "nonempty\extradir\xmcrt.pdf"
#Copy-Item -Path "xmcrt.pdf" -Destination "nonempty\extradir\" -Recurse -Force
New-Item -ItemType Dir -Path "nonempty\extr\adir"
Copy-Item -Path "xmcrt.pdf" -Destination ".\nonempty\extr\adir\1.pdf"

#-------end batch + ps1 related-------------

#--------gdb related ----------------------
# ip addr DontCare could be empty just port :2345
gdbserver --attach 1.1.1.1:2345 $(pidof <prog>)
bitbake_build/makedebugfs.sh && \
cd /pathTo/debugfs && \
pathTo/arm-wrs-linux-gnueabi-gdb -ex "set sysroot ./" -ex "set substitute-path /usr/src/debug ./usr/src/debug" -ex "target remote 192.168.0.101:2345"

gdb$ set solib-search-path /path

gdb$ set max-value-size unlimited 
gdb$ dump value /<pathWhereToPut>.dump THA_TRACE_BUFFER


#--------end gdb related ----------------------






#--------- commandline moving--------------
hXXps://github.com/fliptheweb/bash-shortcuts-cheat-sheet
c + Anf
c + End + u delete line to Anf
c + Back char | a + b word
c + For char  | a + f word

c+h backspace
c+d char @ cursor

a + d >> word
a+Del << word(not wrkng)

c + yank paste
c + w	Cut the Word << the cursor to the clipboard
c + k	Cut the Line >> the cursor to the clipboard

c + t swap 2 chars before cursor | a + t words esc+t same

Alt + u	UPPER capitalize every character from the cursor to the end of the current word.
Alt + l	Lower the case of every character from the cursor to the end of the current word.
Alt + c	Capitalize the character under the cursor and move to the end of the word.
Alt + r	Cancel the changes and put back the line as it was in the history (revert)
Ð¡trl + _	Undo

Ctrl + r	Recall the last command including the specified character(s)(equivalent to : vim ~/.bash_history).
Ctrl + p	Previous command in history (i.e. walk back through the command history)
Ctrl + n	Next command in history (i.e. walk forward through the command history)
Ctrl + s	Go back to the next most recent command.
Ctrl + o	Execute the command found via Ctrl+r or Ctrl+s
Ctrl + g	Escape from history searching mode
Alt + .	Use the last word of the previous command
